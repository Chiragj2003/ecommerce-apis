generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String  @id @default(cuid())
  email         String  @unique
  password      String
  name          String?
  emailVerified Boolean @default(false)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model VerificationToken {
  id      String   @id @default(cuid())
  token   String
  email   String   @unique
  expires DateTime

  createdAt DateTime @default(now())

  @@index([token, email])
}

model ForgetPasswordToken {
  id      String   @id @default(cuid())
  token   String
  email   String   @unique
  expires DateTime

  createdAt DateTime @default(now())

  @@index([token, email])
}

enum Gender {
  MALE
  FEMALE
  UNISEX
}

enum Type {
  TOPWEAR
  BOTTOMWEAR
  FOOTWEAR
  INNERWEAR
}

model Category {
  id        String    @id @default(cuid())
  name      String
  thumbnail String
  gender    Gender
  type      Type
  products  Product[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([name])
}

model Brand {
  id       String    @id @default(cuid())
  name     String    @unique
  image    String?
  products Product[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([name])
}

model Color {
  id       String    @id @default(cuid())
  name     String    @unique
  hexcode  String
  products Product[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([name, hexcode])
  @@index([name])
}

model Size {
  id       String    @id @default(cuid())
  name     String
  type     Type
  products Product[] @relation("ProductToSize")

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Price {
  id       String   @id @default(cuid())
  price    Float
  discount Int
  product  Product?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  productId String
}

model Image {
  id        String  @id @default(cuid())
  image     String
  productId String
  product   Product @relation(fields: [productId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Product {
  id            String   @id @default(cuid())
  name          String
  gender        Gender
  details       Json
  quantity      Int
  specification Json?
  brandId       String
  brand         Brand    @relation(fields: [brandId], references: [id], onDelete: Cascade)
  categoryId    String
  category      Category @relation(fields: [categoryId], references: [id], onDelete: Cascade)
  colorId       String
  color         Color    @relation(fields: [colorId], references: [id], onDelete: Cascade)
  sizes         Size[]   @relation("ProductToSize")
  priceId       String   @unique
  price         Price?   @relation(fields: [priceId], references: [id])
  images        Image[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([name])
  @@index([gender])
  @@index([categoryId])
}
